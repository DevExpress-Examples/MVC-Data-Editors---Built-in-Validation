@{
    ViewBag.Title = "Built-in Validation";
}
@using CS.Models
@model BuiltInValidationData

<script type="text/javascript">
    function OnNameValidation(s, e) {
        if (e.value == null)
            e.isValid = false;
        var name = String(e.value);
        if (name == "")
            e.isValid = false;
        if (name.length > 50) {
            e.isValid = false;
            e.errorText = "Must be under 50 characters";
        }
    }

    function OnAgeValidation(s, e) {
        if (e.value == null || e.value == "")
            return;
        var age = Number(e.value);
        if (isNaN(age) || age < 18 || age > 100)
            e.isValid = false;
    }
</script>

@using(Html.BeginForm("Index", "Home", FormMethod.Post, new { id = "validationForm" })) {
    <div class="container">
        <div class="editorCell">
            @Html.DevExpress().TextBox(
            settings => {
                settings.Name = "Name";
                settings.Width = Unit.Percentage(100);
                settings.Properties.Caption = "Name";
                settings.Properties.CaptionCellStyle.CssClass = "editorCaption";
                settings.Properties.ValidationSettings.Assign(BuiltInValidationHelper.NameValidationSettings);
                settings.Properties.ClientSideEvents.Validation = "OnNameValidation";
                settings.Properties.HelpText = "Validation rules: required, must be under 50 characters";
            }).Bind(Model.Name).GetHtml()
        </div>
    </div>
    <div class="container">
        <div class="editorCell">
            @Html.DevExpress().TextBox(
            settings => {
                settings.Name = "Age";
                settings.Width = Unit.Percentage(100);
                settings.Properties.Caption = "Age";
                settings.Properties.CaptionCellStyle.CssClass = "editorCaption";
                settings.Properties.ValidationSettings.Assign(BuiltInValidationHelper.AgeValidationSettings);
                settings.Properties.ClientSideEvents.Validation = "OnAgeValidation";
                settings.Properties.HelpText = "Validation rules: required, must be between 18 and 100";
            }).Bind(Model.Age).GetHtml()
        </div>
    </div>
    <div class="container">
        <div class="editorCell">
            @Html.DevExpress().TextBox(
            settings => {
                settings.Name = "Email";
                settings.Width = Unit.Percentage(100);
                settings.Properties.Caption = "Email";
                settings.Properties.CaptionCellStyle.CssClass = "editorCaption";
                settings.Properties.ValidationSettings.Assign(BuiltInValidationHelper.EmailValidationSettings);
                settings.Properties.HelpText = "Validation rules: required, must fit email regular expression";
            }).Bind(Model.Email).GetHtml()
        </div>
    </div>
    <div class="container">
        <div class="editorCell">
            @Html.DevExpress().DateEdit(
            settings => {
                settings.Name = "ArrivalDate";
                settings.Width = Unit.Percentage(100);
                settings.Properties.Caption = "Arrival Date";
                settings.Properties.CaptionCellStyle.CssClass = "editorCaption";
                settings.Properties.ValidationSettings.Assign(BuiltInValidationHelper.ArrivalDateValidationSettings);
                settings.Properties.HelpText = "Validation rules: required";
                settings.Properties.CalendarProperties.FastNavProperties.DisplayMode = FastNavigationDisplayMode.Inline;
            }
        ).Bind(Model.ArrivalDate).GetHtml()
        </div>
        <div class="buttonsContainer">
            @Html.DevExpress().Button(
                settings => {
                    settings.Name = "btnUpdate";
                    settings.Text = "Update";
                    settings.UseSubmitBehavior = true;
                }).GetHtml()
            @Html.DevExpress().Button(
                settings => {
                    settings.Name = "btnClear";
                    settings.Text = "Clear";
                    settings.ControlStyle.CssClass = "rightButton";
                    settings.ClientSideEvents.Click = "function(s, e){ ASPxClientEdit.ClearEditorsInContainer(); }";
                }).GetHtml()
        </div>
    </div>
    
}